apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "vm-benchmark.fullname" . }}-prometheus
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "vm-benchmark.prometheus.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "vm-benchmark.prometheus.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/prometheus/configmap.yaml") . | sha256sum }}
      labels:
        {{- include "vm-benchmark.prometheus.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: prometheus
          image: "{{ .Values.prometheus.image.repository }}:{{ .Values.prometheus.image.tag }}"
          imagePullPolicy: "{{ .Values.prometheus.image.pullPolicy }}"
          args:
            - --web.listen-address=0.0.0.0:{{ .Values.prometheus.port }}
            - --config.file=/config/prometheus.yml
          # args:
          #   - --httpListenAddr=:{{ .Values.prometheus.port }}
          #   - --promscrape.config=/config/scrape.yml
          #   {{- range .Values.prometheus.remoteWrite }}
          #   - --remoteWrite.url={{ .url }}
          #   {{- if .token }}
          #   - --remoteWrite.bearerToken={{ .token }}
          #   {{- end }}
          #   {{- end }}
          ports:
            - name: metrics
              containerPort: {{ .Values.prometheus.port }}
          resources:
{{ toYaml .Values.prometheus.resources | indent 12 }}
          volumeMounts:
            - name: config
              mountPath: /config
      {{- if .Values.prometheus.tolerations }}
      tolerations:
{{ toYaml .Values.prometheus.tolerations | indent 8 }}
      {{- end }}
      {{- if .Values.prometheus.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.prometheus.nodeSelector | indent 8 }}
      {{- end }}
      volumes:
      - name: config
        configMap:
          name: {{ include "vm-benchmark.fullname" . }}-prometheus-cm
